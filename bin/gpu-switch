#!/bin/bash

set -e

if [ -z "$1" ]; then
  echo "Usage: gpu-switch <CTID>"
  exit 1
fi

CTID="$1"
CONF="/etc/pve/lxc/$CTID.conf"

# Verify container is privileged
if grep -q "^unprivileged: 1" "$CONF"; then
  echo "[ERROR] CTID $CTID is unprivileged. GPU passthrough won't work."
  exit 1
fi

# Stop all CTs and release GPU devices
echo "[INFO] Releasing GPU from all LXC containers..."
for f in /etc/pve/lxc/*.conf; do
  id=$(basename "$f" .conf)
  pct stop "$id" >/dev/null 2>&1 || true
  sed -i '/^dev[0-9]\+: \/dev\/nvidia/d' "$f"
  sed -i '/^lxc.mount.entry: \/dev\/nvidia/d' "$f"
  sed -i '/^lxc.mount.entry: \/usr\/bin\/nvidia-smi/d' "$f"
  sed -i '/^lxc.mount.entry: \/usr\/lib\/x86_64-linux-gnu\/libnvidia-ml.so.1/d' "$f"
  sed -i '/^lxc.mount.entry: \/usr\/lib\/x86_64-linux-gnu\/libcuda.so.1/d' "$f"
  sed -i '/^lxc.mount.entry: \/usr\/lib\/nvidia/d' "$f"
  sed -i '/^lxc.cgroup2.devices.allow: c 195:/d' "$f"
  sed -i '/^lxc.cgroup2.devices.allow: c 508:/d' "$f"
  sed -i '/^lxc.cgroup2.devices.allow: c 511:/d' "$f"
done

# Add devX entries (visible in Proxmox UI)
echo "[INFO] Assigning GPU to CT $CTID..."
{
  echo "dev0: /dev/nvidia0"
  echo "dev1: /dev/nvidiactl"
  echo "dev2: /dev/nvidia-uvm"
  echo "dev3: /dev/nvidia-uvm-tools"
  echo "dev4: /dev/nvidia-caps/nvidia-cap1"
  echo "dev5: /dev/nvidia-caps/nvidia-cap2"
} >> "$CONF"

# Mount required libraries and tools
echo "lxc.mount.entry: /usr/bin/nvidia-smi /usr/bin/nvidia-smi none bind,ro,optional,create=file" >> "$CONF"
echo "lxc.mount.entry: /usr/lib/x86_64-linux-gnu/libnvidia-ml.so.1 /usr/lib/x86_64-linux-gnu/libnvidia-ml.so.1 none bind,ro,optional,create=file" >> "$CONF"
echo "lxc.mount.entry: /usr/lib/x86_64-linux-gnu/libcuda.so.1 /usr/lib/x86_64-linux-gnu/libcuda.so.1 none bind,ro,optional,create=file" >> "$CONF"
echo "lxc.mount.entry: /usr/lib/nvidia /usr/lib/nvidia none bind,ro,optional,create=dir" >> "$CONF"

# Allow device permissions
echo "lxc.cgroup2.devices.allow: c 195:* rwm" >> "$CONF"
echo "lxc.cgroup2.devices.allow: c 508:* rwm" >> "$CONF"
echo "lxc.cgroup2.devices.allow: c 511:* rwm" >> "$CONF"

# Optional: leave AppArmor line untouched if already unconfined
if ! grep -q "^lxc.apparmor.profile:" "$CONF"; then
  echo "lxc.apparmor.profile: unconfined" >> "$CONF"
fi

# Start container
echo "[INFO] Starting container $CTID..."
pct start "$CTID"
sleep 2

# Check GPU access
echo "[INFO] Verifying GPU access..."
if pct exec "$CTID" -- nvidia-smi &>/dev/null; then
  echo "[SUCCESS] GPU successfully assigned to CTID $CTID"
else
  echo "[WARNING] GPU passthrough applied, but access failed (check inside CT manually)."
fi

